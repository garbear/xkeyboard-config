set(OS "linux")
set(CPU "armv7a")
set(PLATFORM "steamlink")
set(APP_RENDER_SYSTEM )

set(CMAKE_FIND_ROOT_PATH @CMAKE_FIND_ROOT_PATH@)

# set CORE_SYSTEM_NAME and CMAKE_SYSTEM_NAME (sets CMAKE_CROSSCOMPILING)
if(OS STREQUAL linux)
  set(CMAKE_SYSTEM_NAME Linux)
  set(CORE_SYSTEM_NAME linux)
  if(PLATFORM STREQUAL raspberry-pi)
    set(CORE_PLATFORM_NAME rbpi)
    set(ENABLE_LDGOLD OFF CACHE BOOL "Disabling Gnu Gold Linker" FORCE)
    if(NOT APP_RENDER_SYSTEM)
      set(APP_RENDER_SYSTEM gles)
    endif()
  elseif(NOT "steamlink" STREQUAL "")
    set(CORE_PLATFORM_NAME steamlink)
  endif()
  if(NOT APP_RENDER_SYSTEM)
    set(APP_RENDER_SYSTEM gl)
  endif()
elseif(OS STREQUAL android)
  set(CMAKE_SYSTEM_NAME Android)
  set(CORE_SYSTEM_NAME android)
  if(NOT APP_RENDER_SYSTEM)
    set(APP_RENDER_SYSTEM gles)
  endif()
elseif(OS STREQUAL osx)
  set(CMAKE_SYSTEM_NAME Darwin)
  set(CORE_SYSTEM_NAME osx)
  if(NOT APP_RENDER_SYSTEM)
    set(APP_RENDER_SYSTEM gl)
  endif()
elseif(OS STREQUAL ios)
  set(CMAKE_SYSTEM_NAME Darwin)
  set(CORE_SYSTEM_NAME ios)
  if(NOT APP_RENDER_SYSTEM)
    set(APP_RENDER_SYSTEM gles)
  endif()
endif()

if(CORE_SYSTEM_NAME STREQUAL ios OR CORE_SYSTEM_NAME STREQUAL osx)
  set(CMAKE_OSX_SYSROOT )
  list(APPEND CMAKE_FIND_ROOT_PATH ${CMAKE_OSX_SYSROOT} ${CMAKE_OSX_SYSROOT}/usr /usr/X11R6)
  set(CMAKE_LIBRARY_PATH @CMAKE_FIND_ROOT_PATH@/lib:/lib:/usr/X11R6/lib)
  set(CMAKE_INCLUDE_PATH @CMAKE_FIND_ROOT_PATH@/include:/include:/usr/X11R6/include)
endif()
set(CMAKE_SYSTEM_VERSION 1)

# specify the cross compiler
set(CMAKE_C_COMPILER /home/garrett/Documents/steamlink-sdk/toolchain/bin/armv7a-cros-linux-gnueabi-gcc)
set(CMAKE_CXX_COMPILER /home/garrett/Documents/steamlink-sdk/toolchain/bin/armv7a-cros-linux-gnueabi-g++)
set(CMAKE_AR /home/garrett/Documents/steamlink-sdk/toolchain/bin/armv7a-cros-linux-gnueabi-ar CACHE FILEPATH "Archiver")
set(CMAKE_LINKER /home/garrett/Documents/steamlink-sdk/toolchain/bin/armv7a-cros-linux-gnueabi-ld CACHE FILEPATH "Linker")
set(CMAKE_OBJDUMP /home/garrett/Documents/steamlink-sdk/toolchain/bin/armv7a-cros-linux-gnueabi-objdump CACHE FILEPATH "Objdump")
set(CMAKE_RANLIB /home/garrett/Documents/steamlink-sdk/toolchain/bin/armv7a-cros-linux-gnueabi-ranlib CACHE FILEPATH "Ranlib")

if(yes STREQUAL "yes")
  set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE "/usr/bin/ccache")
endif()

# where is the target environment
if(NOT "/home/garrett/Documents/steamlink-sdk/toolchain" STREQUAL "")
  list(APPEND CMAKE_FIND_ROOT_PATH /home/garrett/Documents/steamlink-sdk/toolchain/sysroot/usr)
endif()

# add RBPI's firmware directories
if(CORE_PLATFORM_NAME STREQUAL rbpi)
  list(APPEND CMAKE_FIND_ROOT_PATH /opt/vc)
  list(APPEND CMAKE_LIBRARY_PATH @CMAKE_FIND_ROOT_PATH@/lib:/opt/vc/lib)
  list(APPEND CMAKE_INCLUDE_PATH @CMAKE_FIND_ROOT_PATH@/include:/opt/vc/include)
endif()

# add Android directories and tools
if(CORE_SYSTEM_NAME STREQUAL android)
  set(NDKROOT )
  set(SDKROOT )
  string(REPLACE ":" ";" SDK_BUILDTOOLS_PATH "")
endif()

# add Steam Link's sdk directory
if(CORE_PLATFORM_NAME STREQUAL steamlink)
  list(APPEND CMAKE_FIND_ROOT_PATH /home/garrett/Documents/steamlink-sdk/toolchain/../rootfs)
  list(APPEND CMAKE_LIBRARY_PATH /home/garrett/Documents/steamlink-sdk/toolchain/../rootfs/lib)
  list(APPEND CMAKE_INCLUDE_PATH /home/garrett/Documents/steamlink-sdk/toolchain/../rootfs/include)
endif()

set(CMAKE_C_FLAGS "--sysroot=/home/garrett/Documents/steamlink-sdk/toolchain/../rootfs -marm -mfpu=neon -mfloat-abi=hard -DEGL_API_FB -O0 -g -D_DEBUG  ")
set(CMAKE_CXX_FLAGS "-std=c++11 --sysroot=/home/garrett/Documents/steamlink-sdk/toolchain/../rootfs -marm -mfpu=neon -mfloat-abi=hard -DEGL_API_FB -O0 -g -D_DEBUG  ")
set(CMAKE_C_FLAGS_RELEASE "--sysroot=/home/garrett/Documents/steamlink-sdk/toolchain/../rootfs -marm -mfpu=neon -mfloat-abi=hard -DEGL_API_FB  -O0  ")
set(CMAKE_CXX_FLAGS_RELEASE "-std=c++11 --sysroot=/home/garrett/Documents/steamlink-sdk/toolchain/../rootfs -marm -mfpu=neon -mfloat-abi=hard -DEGL_API_FB  -O0  ")
set(CMAKE_C_FLAGS_DEBUG "--sysroot=/home/garrett/Documents/steamlink-sdk/toolchain/../rootfs -marm -mfpu=neon -mfloat-abi=hard -DEGL_API_FB -O0 -g -D_DEBUG  ")
set(CMAKE_CXX_FLAGS_DEBUG "-std=c++11 --sysroot=/home/garrett/Documents/steamlink-sdk/toolchain/../rootfs -marm -mfpu=neon -mfloat-abi=hard -DEGL_API_FB -O0 -g -D_DEBUG  ")
set(CMAKE_CPP_FLAGS "--sysroot=/home/garrett/Documents/steamlink-sdk/toolchain/../rootfs -marm -mfpu=neon -mfloat-abi=hard -DEGL_API_FB -O0 -g -D_DEBUG  ")
set(CMAKE_LD_FLAGS "-static-libgcc -static-libstdc++ -lstdc++  ")
set(ENV{CFLAGS} ${CMAKE_C_FLAGS})
set(ENV{CXXFLAGS} ${CMAKE_CXX_FLAGS})
set(ENV{CPPFLAGS} ${CMAKE_CPP_FLAGS})
set(ENV{LDFLAGS} ${CMAKE_LD_FLAGS})
# search for programs in the build host directories
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
# for libraries and headers in the target directories
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_FRAMEWORK LAST)

# Binary Addons
if(NOT CORE_SYSTEM_NAME STREQUAL linux)
  set(ADDONS_PREFER_STATIC_LIBS ON)
endif()

set(KODI_DEPENDSBUILD 1)

